# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

pool:
  vmImage: 'windows-latest'

variables:
  - name: solution
    value: '**/*.sln'
  - name: buildPlatform
    value: 'Any CPU'
  - name: publishConfiguration
    ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
      value: 'Release'
  - name: buildConfiguration
    ${{ if eq(variables.publishConfiguration, '') }}:
      value: 'Debug'
    ${{ if ne(variables.publishConfiguration, '') }}:
      value: ${{ variables.publishConfiguration }}
  - name: isPublish
    ${{ if eq(variables.publishConfiguration, '') }}:
      value: false
    ${{ if ne(variables.publishConfiguration, '') }}:
      value: true

steps:
- script: |
    echo Build current is ${{ variables.buildConfiguration }}
    echo Build default is $(buildConfiguration)
  displayName: Echo Build value

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build solution
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  condition: and(succeeded(), eq(variables.isPublish, false))

- task: VSBuild@1
  displayName: Publish SimpleApi
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:SimpleApi /p:DeployOnBuild=true /p:PublishProfile=PublishApi'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: VSBuild@1
  displayName: Publish Web
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:WebApplication /p:DeployOnBuild=true /p:PublishProfile=PublishWeb'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: VSBuild@1
  displayName: Publish Web.API
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:WebApplication /p:DeployOnBuild=true /p:PublishProfile=Web.API'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: CopyFiles@2
  displayName: 'Copy published API Files to: $(build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.DefaultWorkingDirectory)/SimpleApi/Api/Publish'
    TargetFolder: '$(build.ArtifactStagingDirectory)/API'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: CopyFiles@2
  displayName: 'Copy published WEB Files to: $(build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.DefaultWorkingDirectory)/WebApplication/Web/Publish'
    TargetFolder: '$(build.ArtifactStagingDirectory)/WEB'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: CopyFiles@2
  displayName: 'Copy published Web.API Files to: $(build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.DefaultWorkingDirectory)/Web.API/Web.API/Publish'
    TargetFolder: '$(build.ArtifactStagingDirectory)/Web.API'
  condition: and(succeeded(), eq(variables.isPublish, true))

- task: PublishPipelineArtifact@1
  displayName: 'Publish artifacts'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: dist
  condition: and(succeeded(), eq(variables.isPublish, true))
